// 메서드 올리기
// 중복 코드 제거는 중요하다.
// 이 과정을 적용하기에 가장 이상한 상황은 해당 메서드의 본문에서 참조하는 필드들이 서브클래스에만 있는 경우이다.
// 위 경우, 먼저 슈퍼클래스로 옮긴 후에 메서드를 올려야 한다.

// 절차
// 1. 똑같이 동작하는 메서드인지 면밀히 살펴본다.(실질적으로는 같지만, 코드가 다르다면 본문 코드가 똑같아질때까지 리팩터링한다.)
// 2. 메서드 안에서 호출하는 다른 메서드와 참조하는 필드들을 슈퍼클래스에서도 호출하고 참조할 수 있는지 확인한다.
// 3. 메서드 시그니처가 다르다면 '함수 선언 바꾸기'로 슈퍼클래스에서 사용하고 싶은 형태로 통일한다.
// 4. 슈퍼클래스에 새로운 메서드를 생성하고, 대상 메서드의 코드를 복사해넣는다.
// 5. 정적 검사를 수행한다.
// 6. 서브클래스 중 하나의 메서드를 제거한다.
// 7. 테스트한다.
// 8. 모든 서브클래스의 메서드가 없어질 때까지 다른 서브클래스의 메서드를 하나씩 제거한다.

// ex
class Employee {

}

class Salesperson extends Employee {
  get name() { }
}

class Engineer extends Employee {
  get name() { }
}

// 위 소스에서 하위 클래스의 각 메서드가 잘 작동한다면 이름을 통일시켜보고, 그 후 상위 클래스로 옮긴다.
class EmployeeRefac {
  get name() { }
}

class SalespersonRefac extends EmployeeRefac { }
class EngineerRefac extends EmployeeRefac { }