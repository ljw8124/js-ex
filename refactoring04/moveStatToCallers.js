// 문장을 호출한 곳으로 옮기기
// 추상화라는 것은 경계를 긋기가 쉽지 않다.
// 코드베이스의 기능 범위가 달라지면 추상화의 경계도 움직이게 된다.

// 절차
// 1. 호출자가 한두 개뿐이고 피호출 함수도 간단하고 단순한 상황이라면, 피호출 함수의 처음(혹은 마지막)줄(들)을 잘라내어
//    호출자(들)로 복사해넣는다(필요하면 적당히 수정한다). 테스트만 통과하면 이번 리팩터링은 여기서 끝이다.
// 2. 더 복잡한 상황에서는, 이동하지 '않길' 원하는 모든 문장을 함수로 추출한 다음 검색하기 쉬운 임시 이름을 지어준다.
// 3. 원래 함수를 인라인 한다.
// 4. 추출된 함수의 이름을 원래 함수의 이름으로 변경한다(함수 이름 변경하기).