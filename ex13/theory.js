/*
refresh 를 위한 JS 이론 정리

가장 기본적인 데이터 타입은 숫자(number) 와 문자(text) 이다.
나머지는 다 이 두 가지 타입에서 파생된 타입이라고 할 수 있다.

const 는 constant 말그대로 변하지 않는 상수를 의미한다.

변수 네이밍 룰 -> JS 의 경우에는 myName 같은 식으로 작성한다.
              파이썬에서는 my_name 이런식으로 작성한다.

let 은 재할당해도 되는 변수를 사용할 때 정의한다.

즉, 코딩을 하다가 변수의 값을 변환해야할 때는 let 으로 선언하고,
값이 변하지 않기를 원한다면 const 를 이용하여 선언한다.

JS 에서는 const 를 사용하는 것이 일반적이고, 값을 바꿔야하는 특수한 경우에만 let 을 사용한다.
var 는 재할당, 재선언도 가능하나, ES6 전의 변수 선언 방식이다. -> 변수가 보호받지 못함

프로그래밍 언어상에서 true 는 1, false 는 0 으로 처리한다.
하지만 리눅스에서는 종료 상태 값을 0 이면 true, 1이면 false 로 처리한다.

null 은 값이 존재하지 않는다는 것을 의미한다. null !== false
undefined 는 데이터 타입과 비슷한데, 변수가 선언만 되고 값이 정의되지 않았을 때를 말한다.

Object 에 접근하는 방법.
=> Object.property & Object[property]
Object 를 const 로 선언하여도, Object 안에 값을 변경하는 것은 가능하다.

function 은 반복해서 사용하는 코드 조각이다. => 모듈화를 위해서는 필수라고 할 수 있.
argument 를 이용하여 function 안에 인자를 넘길 수 있다.

그리고 함수는 Object 에 property 로 넣을 수도 있다.

함수 표현식은 함수 선언과 매우 비슷하지만, 호이스팅이 되지 않아서 코드 내에 나타나기 전에 먼저 사용할 수 없다.

함수에서 연산한 값을 전달받고 싶을 때는 return 을 사용한다



 */