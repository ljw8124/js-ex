//react 전 알아야할 기본 JS 문법

//이 코드는 var 의 단점이라고 할 수 있다. 할당이 계속 되므로 오류가 잘못 작성될 가능성이 높다.
//let을 이용하면 변수여ㅢ 영역을 코드 블록 안으로 한정시킬 수가 있다.
var fn1 = function() {
  var topic = "자바스크립트";
  if(topic) {
    var topic = "리액트";
    console.log('블록', topic);
  }

  console.log('글로벌', topic);
};

fn1();

console.log('-----------------------');

//아래처럼 let 으로 선언한 topic 은 블록안에서 변경하여도 바깥의 topic에게 영향을 주지 않음
const fn2 = function() {
  var topic = "자바스크립트";
  if(topic) {
      let topic = "리액트";
      console.log('블록', topic);
  }
  console.log('글로벌', topic);
}

fn2();

//----------------------------------------------------------------
//----------------------------------------------------------------

//템플릿 문자열을 이용하여 문자열을 연결하거나 HTML 문자열에 넣을 수 있다.
//이 때 백틱(``)을 이용하는데, ${}안에 사용할 변수를 넣어 출력한다.

//이 때 const는 상수 역할로 다시 선언하거나 할당 할 수 없음
const email = `
${firstName} 님,

${showEvent} 티켓 ${qty}건을 구매해 주셔서 감사합니다.

주문 상세 전보:
  ${lastName} ${firstName} ${middleName}
  ${qty} x $${price} = $${qty*price} 공연: ${showEvent}
  
  공연 시작 30분 전까지 배부처에서 티켓을 수령하시길 바랍니다.
  
  감사합니다.
  
    ${ticketAgent} 드림.
`
//----------------------------------------------------------------
//----------------------------------------------------------------

//이처럼 백틱을 이용한다면 +를 이용하여 문자열을 연결하지 않아도 된다.
//단, 공백도 유지하기 때문에 작성할 때 유의하여야 한다.

//위의 fn1()이나 fn2()처럼 변수에 함수를 넣는 방법을 함수 표현식이라고 한다.
//이 때 유의할 점은 함수 선언의 경우는 호이스팅이 되지만 함수 표현식의 경우는
//호이스팅이 되지 않는다는 점이다.

//함수선언 -> 호이스팅 자동으로 됨
ex1();

function ex1() {
    console.log('ex1 active....');
}

//함수표현식 -> 호이스팅 되지 않음, 따라서 실행 시 TypeError 발생
ex2();

const ex2 = function() {
    console.log('ex2 active.....');
}

