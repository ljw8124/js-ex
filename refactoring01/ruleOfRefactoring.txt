-리팩토링 정의

리팩터링: [명사] 소프트웨어의 겉보기 동작은 그대로 유지한 채, 코드를 위해하고 수정하기 쉽도록 내부 구조를 변경하는 기법
        ex) 함수 추출하기, 조건부 로직을 다형성으로 바꾸기

리팩터링(하다): [동사] 소프트웨어의 겉보기 동작은 그대로 유지한 채, 여러 가지 리팩터링 기법을 적용해서 소프트웨어를 재구성하다.

코드를 잘게 나눔으로써 처음에는 오래 걸릴 수 있지만, 후에 디버깅을 하는데 있어서 시간을 뺏기지 않을 수 있다.

그리고 리팩터링은 전과 후의 코드 동작이 같아야 한다.

리팩터링은 성능 최적화와 비슷하다. 코드 전반적인 기능은 차이가 거의 없을 정도로 유지함.
리팩터링의 목적은 코드를 이해하고 수정하기 쉽게 수정하는 데에 있다.

성능 최적화는 오로지 속도 개선에만 신경을 쓰기 때문에 속도 성능을 위해서는 코드 다루기가 더 어려워 질 수도 있다.

-두 개의 모자

소프트웨어를 개발 할 때는 두 가지 목적으로 나뉘어진다. 기능 추가인가 혹은 리팩터링을 위해서 인가 이다.

기능추가를 위해서는 기존 코드를 절대 건드리지 않고 오로지 새 기능을 추가하는 것에만 집중한다.

하지만 리팩터링을 위해서는 기능을 추가하지 않고 오로지 코드 재구성에만 전념한다.

테스트도 예외의 상황(앞 과정에서 놓친 테스트 케이스를 발견하는 경우)을 제외하고 새로 만들지 않는다.

부득이하게 인터페이스를 변경해야 할 때만 기존 테스트를 수정한다.

